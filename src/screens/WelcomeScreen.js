// src/screens/WelcomeScreen.js

import React, { useEffect, useContext, useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Animated, Dimensions, Alert } from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';

// ================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–ù–ê–ß–ê–õ–û) ==================
import { GoogleSignin, GoogleSigninButton, statusCodes } from '@react-native-google-signin/google-signin';
import { AuthContext } from '../contexts/AuthContext'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –≤–µ—Ä–Ω—ã–π
// =================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–ö–û–ù–ï–¶) ===================

const { width } = Dimensions.get('window');

export default function WelcomeScreen({ navigation }) {
  const fadeAnim = React.useRef(new Animated.Value(0)).current;

  // ================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–ù–ê–ß–ê–õ–û) ==================
  const { signInWithGoogle } = useContext(AuthContext);
  const [isSigningIn, setIsSigningIn] = useState(false);

  const handleGoogleSignIn = async () => {
    setIsSigningIn(true);
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω—ã –ª–∏ —Å–µ—Ä–≤–∏—Å—ã Google Play (—Ç–æ–ª—å–∫–æ –¥–ª—è Android)
      await GoogleSignin.hasPlayServices();
      
      // 2. –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞
      const userInfo = await GoogleSignin.signIn();
      
      // 3. –ï—Å–ª–∏ –º—ã –ø–æ–ª—É—á–∏–ª–∏ idToken, –∑–Ω–∞—á–∏—Ç –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
      if (userInfo.idToken) {
        // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ –Ω–∞—à –±—ç–∫—ç–Ω–¥ —á–µ—Ä–µ–∑ AuthContext
        await signInWithGoogle(userInfo.idToken);
        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞, –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä –≤ App.js –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        // –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω.
      } else {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å idToken –æ—Ç Google');
      }
    } catch (error) {
      if (error.code === statusCodes.SIGN_IN_CANCELLED) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –≤—Ö–æ–¥, —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –≤—Ö–æ–¥');
      } else if (error.code === statusCodes.IN_PROGRESS) {
        // –û–ø–µ—Ä–∞—Ü–∏—è —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
        console.log('–í—Ö–æ–¥ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ');
      } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {
        // –°–µ—Ä–≤–∏—Å—ã Google Play –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–∏
        Alert.alert('–û—à–∏–±–∫–∞', '–°–µ—Ä–≤–∏—Å—ã Google Play –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–∏.');
      } else {
        // –ö–∞–∫–∞—è-—Ç–æ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
        console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google:', error);
        Alert.alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      }
    } finally {
      // –í–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
      setIsSigningIn(false);
    }
  };
  // =================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–ö–û–ù–ï–¶) ===================

  useEffect(() => {
    Animated.timing(fadeAnim, {
      toValue: 1,
      duration: 1200,
      useNativeDriver: true,
    }).start();
  }, [fadeAnim]);

  return (
    <LinearGradient
      colors={['#1e3c72', '#2a5298']}
      style={styles.container}
    >
      <Animated.View style={[styles.header, { opacity: fadeAnim }]}>  
        <View style={styles.logoCircle}>
          <Text style={styles.logoIcon}>üìñ</Text>
        </View>
        <Text style={styles.title}>Booklingo</Text>
        <Text style={styles.subtitle}>Learn languages through reading</Text>
      </Animated.View>

      <View style={styles.buttonContainer}>
        {/* ================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–ù–ê–ß–ê–õ–û) ================== */}
        <GoogleSigninButton
            style={{ width: '100%', height: 50, marginBottom: 15 }}
            size={GoogleSigninButton.Size.Wide}
            color={GoogleSigninButton.Color.Dark}
            onPress={handleGoogleSignIn}
            disabled={isSigningIn}
        />

        <View style={styles.dividerContainer}>
            <View style={styles.dividerLine} />
            <Text style={styles.dividerText}>OR</Text>
            <View style={styles.dividerLine} />
        </View>
        {/* =================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–ö–û–ù–ï–¶) =================== */}

        <TouchableOpacity
          style={styles.primaryButton}
          onPress={() => navigation.navigate('Login')}
          disabled={isSigningIn} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        >
          <Text style={styles.primaryButtonText}>Login</Text>
        </TouchableOpacity>

        <TouchableOpacity
          style={styles.secondaryButton}
          onPress={() => navigation.navigate('Register')}
          disabled={isSigningIn} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        >
          <Text style={styles.secondaryButtonText}>Register</Text>
        </TouchableOpacity>
      </View>
    </LinearGradient>
  );
}

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  header: {
    marginTop: 100,
    alignItems: 'center',
  },
  logoCircle: {
    width: width * 0.3,
    height: width * 0.3,
    borderRadius: (width * 0.3) / 2,
    backgroundColor: 'rgba(255,255,255,0.2)',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.3,
    shadowRadius: 4,
    elevation: 5,
  },
  logoIcon: {
    fontSize: 48,
  },
  title: {
    fontSize: 36,
    color: '#fff',
    fontWeight: '700',
    letterSpacing: 1,
  },
  subtitle: {
    fontSize: 16,
    color: 'rgba(255,255,255,0.85)',
    marginTop: 8,
  },
  buttonContainer: {
    width: '100%',
    paddingHorizontal: 20,
    marginBottom: 60,
  },
  primaryButton: {
    backgroundColor: '#fff',
    paddingVertical: 14,
    borderRadius: 30,
    marginBottom: 15,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 3,
    elevation: 4,
  },
  primaryButtonText: {
    color: '#2a5298',
    fontSize: 18,
    fontWeight: '600',
  },
  secondaryButton: {
    borderWidth: 2,
    borderColor: '#fff',
    paddingVertical: 14,
    borderRadius: 30,
    alignItems: 'center',
  },
  secondaryButtonText: {
    color: '#fff',
    fontSize: 18,
    fontWeight: '600',
  },
  // ================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–°–¢–ò–õ–ò) ==================
  dividerContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 15,
  },
  dividerLine: {
    flex: 1,
    height: 1,
    backgroundColor: 'rgba(255,255,255,0.3)',
  },
  dividerText: {
    width: 50,
    textAlign: 'center',
    color: 'rgba(255,255,255,0.8)',
    fontWeight: '500',
  },
  // =================== –ù–ê–® –ù–û–í–´–ô –ö–û–î (–°–¢–ò–õ–ò) ===================
});
